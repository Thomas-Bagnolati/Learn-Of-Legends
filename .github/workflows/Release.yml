name: GitHub Release

on:
  push:
    branches:
      - main
      - github_action_workflow # TODO : remove when end to try (pull_request:)
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

#      - name: Build app bundle
#        id: buildReleaseBundle
#        run: ./gradlew :app:bundleRelease

      - name: Build app apk
        id: buildReleaseApk
        run: ./gradlew :app:assembleRelease

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload app
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive


#      - name: Sign app
#        uses: r0adkll/sign-android-release@v1
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.KEY_STORE_BASE64 }}
#          alias: ${{ secrets.ALIAS }}
#          keyStorePassword: ${{ secrets.STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#        env:
#          BUILD_TOOLS_VERSION: "34.0.0"
#
#      - name: Upload app
#        uses: actions/upload-artifact@v3
#        with:
#          name: sign-app
#          path: ${{ steps.sign_app.outputs.signedReleaseFile }}
#
#
#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Download app bundle from artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: sign-app
#
#      - name: Publish to Play Store
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.SERVICE_JSON_ACCOUNT }}
#          packageName: com.bagnolati.learnoflegends
#          releaseFiles: app-release.aab
#          track: internal
#          status: draft